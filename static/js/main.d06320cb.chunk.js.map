{"version":3,"sources":["imgs/eth-logo.png","imgs/eth.png","imgs/binance-logo.png","components/Sidebar.tsx","components/components/utils/Circles.tsx","components/components/__styles__.ts","components/components/TokenNameSymbolModal.tsx","components/components/utils/Switch.tsx","components/components/NetworkModal.tsx","components/components/AskForPvtkModal.tsx","components/components/MainDivHeading.tsx","components/components/MintableBurnableSwitches.tsx","components/components/utils/Slider.tsx","components/components/DecimalsTotalSupplySliders.tsx","components/Main.tsx","components/components/utils/Loader.tsx","components/components/LoadingModal.tsx","components/components/NotificationSnackBars.tsx","components/components/NotAvailableOnMobile.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["SidebarHeader","className","src","ETHLogo","alt","style","width","height","GenTokenLink","img","h2Data","activeChange","which","active","onClick","event","GenTokenLinks","ERCComp","BEPComp","ETHGenTokenLogo","BSCGenTokenLogo","GithubBadge","textDecoration","href","opacity","Sidebar","Circles","Styles","position","border","background","borderRadius","display","flexDirection","alignItems","color","fontSize","fontWeight","modalStyles","makeStyles","createStyles","padding","margin","borderColor","TokenNameSymbolModal","setOpenClose","modalOpen","handleOnchange","TokenName","TokenSymbol","styles","tokenNameSymbolModal","id","noValidate","autoComplete","FormControl","fullWidth","variant","InputLabel","htmlFor","OutlinedInput","value","startAdornment","InputAdornment","labelWidth","onChange","marginTop","Modal","open","onClose","aria-labelledby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","backdropFilter","Fade","in","SwitchButton","withStyles","theme","root","spacing","switchBase","transform","palette","common","white","backgroundColor","thumb","track","grey","transition","transitions","create","checked","focusVisible","classes","props","Switch","focusVisibleClassName","disableRipple","NetworkModal","networkModalOpen","networks","deployToken","networkModal","top","left","Typography","component","Grid","container","item","netOne","net","name","netTwo","netThree","AskForPvtkModal","pvtkModalOpen","pvtkOnChange","PrivateKey","confirmPvtk","askForPvtkModal","MainDivHeading","connectWeb3","Web3Status","MintableBurnableSwitches","mintableChecked","burnableChecked","handleSwitchChange","iOSBoxShadow","IOSSlider","boxShadow","marginLeft","valueLabel","rail","mark","markActive","Slider","SliderComp","label","marks","defaultValue","max","restricted","aria-label","valueLabelDisplay","step","DecimalsTotalSupplySliders","handleSliderChange","newValue","MainDiv","openTknNameSymModal","useStyles","Loader","LinearProgress","LoadingModal","loadingModalOpen","Alert","elevation","NotificationSnackBars","successSnackOpen","errorSnackOpen","enterPvtkSnackOpen","forgotTknNameSymSnackOpen","tokenType","handleClose","infoSnackOpen","enteredPrivateKeySnackOpen","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","NotAvailableOnMobile","TopNav","openCloseSidebar","sendRequest","url","body","a","axios","post","URLs","BlockExplorerURLs","mainnet","testnet","kovan","App","Web3","state","URL","Decimals","TotalSupply","tokenNameSymModalOpen","Network","netOneChecked","netTwoChecked","netThreeChecked","sidebarOpen","pvtk","deployToken_","checkParams","setTimeout","setState","toast","error","dontAutoOpenPvtkModal","handlers","handlepvtkModalOpenClose","determineUrlPath","res","redirectUrl","determineRedirectUrl","data","receipt","transactionHash","console","log","redirectUser","response","err","errors","forEach","msg","e","window","location","txhash","tokenName","tokenDecimals","tokenSymbol","totalSupply","privateKey","network","preventDefault","ethereum","alert","send","render","document","getElementById","handletokenNameSymModalOpenClose","handleTknNameSymOnChange","handlenetworkModalOpenClose","handleNetworkChange","target","bool","newNet","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.d06320cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/eth-logo.a85b6de0.png\";","export default __webpack_public_path__ + \"static/media/eth.fc2007e0.png\";","export default __webpack_public_path__ + \"static/media/binance-logo.12f6ca37.png\";","import ETHLogo from '../imgs/eth-logo.png'\nimport ETHGenTokenLogo from '../imgs/eth.png'\nimport BSCGenTokenLogo from '../imgs/binance-logo.png'\nimport { AiFillGithub } from 'react-icons/ai'\n\nconst SidebarHeader = () => (\n  <div className=\"sidebar-header\">\n    <img\n      src={ETHLogo} alt=\"\"\n      style={ {\n        width: '2rem',\n        height: '2rem'\n      } }\n    />\n  </div>\n)\n\ninterface IGenTokenLink { \n  img: string\n  h2Data: string\n  activeChange: ActiveChangeFunc\n  which: 'ERCComp' | 'BEPComp'\n  active: 'active' | ''\n}\n\nconst GenTokenLink = ({\n  img, h2Data, activeChange, which, active\n}: IGenTokenLink) => (\n  <div className={'gen-token-link ' + active} onClick={event => {\n    activeChange(event, which)\n  }}>\n    <img src={img} alt=\"\" style={ {\n      height: '2rem',\n      width: '2rem'\n    } }/>\n    <h2>{h2Data}</h2>\n  </div>\n)\n\ntype ActiveChangeFunc = (\n  event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  which: 'ERCComp' | 'BEPComp'\n) => void\n\ninterface IGenTokenLinks {\n  activeChange: ActiveChangeFunc\n  ERCComp: boolean\n  BEPComp: boolean\n}\n\nconst GenTokenLinks = ({\n  activeChange,\n  ERCComp,\n  BEPComp\n}: IGenTokenLinks) => (\n  <div className=\"gen-token-links\">\n    <GenTokenLink\n      img={ETHGenTokenLogo}\n      h2Data=\"ERC\"\n      activeChange={activeChange}\n      which=\"ERCComp\"\n      active={ERCComp ? 'active' : ''}\n    />\n    <GenTokenLink\n      img={BSCGenTokenLogo}\n      h2Data=\"BEP\"\n      activeChange={activeChange}\n      which=\"BEPComp\"\n      active={BEPComp ? 'active' : ''}\n    />\n  </div>\n)\n\nconst GithubBadge = () => (\n  <a style={{ textDecoration: 'none' }} href=\"https://github.com/sntsabode/tkngen\" className=\"github-credits btn-gradient\">\n    <h3 style={{ opacity: '95%' }}>Check it out on Github</h3>\n    <AiFillGithub className=\"github-logo\" style={ {\n      width: '4rem',\n      height: '4rem'\n    } }/>\n  </a>\n)\n\nexport const Sidebar = ({\n  activeChange,\n  ERCComp,\n  BEPComp\n}: IGenTokenLinks) => (\n  <div className=\"sidebar\">\n    <SidebarHeader />\n    <GenTokenLinks\n      activeChange={activeChange}\n      ERCComp={ERCComp}\n      BEPComp={BEPComp}\n    />\n    <GithubBadge />\n  </div>\n)","export const Circles = () => (\n  <>\n    <div className=\"circle-1\"></div>\n    <div className=\"circle-2\"></div>\n  </>\n)","export const Styles = {\n  'modal': {\n    position: 'absolute',\n    width: '35%',\n    height: '60%',\n    border: 'none',\n    background: 'linear-gradient(to right bottom, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.3))',\n    borderRadius: '2rem',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n\n  'modal-btn': {\n    width: '40%',\n    height: '4rem',\n    color: 'gray !important',\n    border: 'none',\n    borderRadius: '2rem',\n    fontSize: '14pt',\n    fontWeight: 700\n  }\n}\n\nexport const modalStyle = {\n  top: '20%',\n  left: '32.5%',\n}","import Modal from '@material-ui/core/Modal'\nimport { createStyles, makeStyles } from '@material-ui/core'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport Fade from '@material-ui/core/Fade'\nimport FormControl from '@material-ui/core/FormControl'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport { Styles } from './__styles__'\nimport React from 'react'\n\nconst modalStyles = makeStyles(() => createStyles({\n  'token-name-sym-modal': Styles['modal'] as any,\n\n  'tkn-name-sym-inputs': {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '0rem 2rem',\n  },\n\n  'tkn-input': {\n    margin: '2rem 2rem',\n    '& :hover': {\n      borderColor: '#bfbfbf'\n    },\n\n  },\n\n  'tkn-input-box': {\n    '& :active': {\n      borderColor: '#bfbfbf'\n    },\n\n    '& :hover': {\n      borderColor: '#bfbfbf'\n    }\n  },\n\n  'deploy-tkn-f-btn': Styles['modal-btn'] as any\n}))\n\nexport interface ITokenNameSymbolModal {\n  setOpenClose: (which: boolean) => void\n  handleOnchange: (which: 'TokenName' | 'TokenSymbol') => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void\n  modalOpen: boolean\n  TokenName: string\n  TokenSymbol: string\n  onClick: (event: React.MouseEvent) => void\n}\n\nexport const TokenNameSymbolModal = ({\n  setOpenClose, modalOpen, handleOnchange,\n  TokenName, TokenSymbol, onClick\n}: ITokenNameSymbolModal) => {\n  const styles = modalStyles()\n\n  const tokenNameSymbolModal = (\n    <div className=\"modal stan token-name-sym\">\n      <h2 id=\"metadata-step-title\" className=\"tkn-ns-title\">Meta Data</h2>\n      <form className={styles['tkn-name-sym-inputs']} noValidate autoComplete=\"off\">\n        <FormControl fullWidth className={styles['tkn-input']} variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-amount\">Token Name</InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-amount\"\n            value={TokenName}\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n            labelWidth={100}\n            className={styles['tkn-input-box']}\n            onChange={handleOnchange('TokenName')}\n          />\n        </FormControl>\n        <FormControl fullWidth className={styles['tkn-input']} variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-amount\">Token Symbol</InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-amount\"\n            value={TokenSymbol}\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n            labelWidth={110}\n            className={styles['tkn-input-box']}\n            onChange={handleOnchange('TokenSymbol')}\n          />\n        </FormControl>\n      </form>\n      <div style={ { marginTop: '2rem' } }></div>\n      <button\n        className={styles['deploy-tkn-f-btn'] + ' secondary-btn-tkn'}\n        onClick={onClick}\n      >NEXT</button>\n    </div>\n  )\n\n  return (\n    <Modal\n      open={modalOpen}\n      onClose={() => {\n        setOpenClose(false)\n      }}\n      aria-labelledby=\"metadata-step-title\"\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={ {\n        timeout: 800,\n        style: { backdropFilter: 'blur(2rem)' }\n      } }\n    >\n      <Fade in={modalOpen}>\n        {tokenNameSymbolModal}\n      </Fade>\n    </Modal>\n  )\n}","import { withStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch'\n\ninterface Styles extends Partial<Record<SwitchClassKey, string>> {\n  focusVisible?: string\n}\n\ninterface Props extends SwitchProps {\n  classes: Styles\n}\n\nexport const SwitchButton = withStyles((theme: Theme) => createStyles({\n    root: {\n      width: 42,\n      height: 26,\n      padding: 0,\n      margin: theme.spacing(1),\n    },\n    switchBase: {\n      padding: 1,\n      '&$checked': {\n        transform: 'translateX(16px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          backgroundColor: '#52d869',\n          opacity: 1,\n          border: 'none',\n        },\n      },\n      '&$focusVisible $thumb': {\n        color: '#52d869',\n        border: '6px solid #fff',\n      },\n    },\n    thumb: {\n      width: 24,\n      height: 24,\n    },\n    track: {\n      borderRadius: 26 / 2,\n      border: `1px solid ${theme.palette.grey[400]}`,\n      backgroundColor: theme.palette.grey[50],\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n  }),\n)(({ classes, ...props }: Props) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      className=\"switch-btn\"\n      {...props}\n    />\n  )\n})\n","import { Backdrop, Fade, Grid } from '@material-ui/core'\nimport Modal from '@material-ui/core/Modal'\nimport { SwitchButton } from './utils/Switch'\nimport Typography from '@material-ui/core/Typography'\n\ninterface INetworkModal {\n  networkModalOpen: boolean\n  networks: {\n    netOne: {\n      net: 'MAINNET' | 'BSC'\n      checked: boolean\n    }\n    netTwo: {\n      net: 'KOVAN' | 'BSC Test Net'\n      checked: boolean\n    }\n    netThree: {\n      net: 'ETH FORK' | 'BSC FORK'\n      checked: boolean\n    }\n  }\n  setOpenClose: (which: boolean) => void\n  onChange: (\n    event: React.ChangeEvent,\n    newNet: string,\n    net: 'netOneChecked' | 'netTwoChecked' | 'netThreeChecked'\n  ) => void\n  deployToken: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => Promise<void>\n}\n\nexport function NetworkModal({\n  networkModalOpen, setOpenClose,\n  networks, onChange, deployToken\n}: INetworkModal) {\n  const networkModal = (\n    <div style={ {\n      top: '12.5%',\n      left: '32.5%',\n    } } className=\"modal tenup\">\n      <h2 id=\"network-step-title\" className=\"tkn-ns-title\">Network</h2>\n      <p className=\"modal-explain\">Select the network you want your token deployed on.</p>\n      <div className=\"network-switches-container\">\n        <Typography component=\"div\">\n          <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n            <Grid item className=\"switch-label\">{networks.netOne.net}</Grid>\n            <Grid item>\n              <SwitchButton\n                checked={networks.netOne.checked}\n                onChange={(event) => {\n                  onChange(event, networks.netOne.net, 'netOneChecked')\n                }}\n                name=\"mintable-check\"\n              />\n            </Grid>\n          </Grid>\n        </Typography>\n        <Typography component=\"div\">\n          <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n            <Grid item>\n              <SwitchButton\n                checked={networks.netTwo.checked}\n                onChange={(event) => {\n                  onChange(event, networks.netTwo.net, 'netTwoChecked')\n                }}\n                name=\"mintable-check\"\n              />\n            </Grid>\n            <Grid item className=\"switch-label\">{networks.netTwo.net}</Grid>\n          </Grid>\n        </Typography>\n      </div>\n      <div className=\"network-exper-switch\">\n        <Typography component=\"div\">\n          <Grid component=\"label\" style={{\n            display: 'flex',\n            flexDirection: 'column'\n          }} container alignItems=\"center\" spacing={1}>\n            <Grid item className=\"switch-label\">{networks.netThree.net}</Grid>\n            <Grid item>\n              <SwitchButton\n                checked={networks.netThree.checked}\n                onChange={(event) => {\n                  onChange(event, networks.netThree.net, 'netThreeChecked')\n                }}\n                name=\"mintable-check\"\n              />\n            </Grid>\n          </Grid>\n        </Typography>\n      </div>\n      <button\n        className=\"modal-btn confirm-button secondary-btn-tkn\"\n        onClick={deployToken}\n      >Deploy!</button>\n    </div>\n  )\n\n  return (\n    <Modal\n      open={networkModalOpen}\n      onClose={() => {\n        setOpenClose(false)\n      }}\n      aria-labelledby=\"network-step-title\"\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={ {\n        timeout: 800,\n        style: { backdropFilter: 'blur(2rem)' }\n      } }\n    >\n      <Fade in={networkModalOpen}>\n        {networkModal}\n      </Fade>\n    </Modal>\n  )\n}\n","import { Backdrop, Fade } from '@material-ui/core'\nimport FormControl from '@material-ui/core/FormControl'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Modal from '@material-ui/core/Modal'\nimport { FiKey } from 'react-icons/fi'\n\ninterface IAskForPvtkModal {\n  pvtkModalOpen: boolean,\n  setOpenClose: (which: boolean) => void\n  pvtkOnChange: (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => void\n  PrivateKey: string\n  confirmPvtk: (\n    event: any\n  ) => void\n}\n\nexport const AskForPvtkModal = ({\n  pvtkModalOpen, setOpenClose,\n  pvtkOnChange, PrivateKey, confirmPvtk\n}: IAskForPvtkModal) => {\n  const askForPvtkModal = (\n    <div style={{\n      top: '15%',\n      left: '32.5%',\n    }} className=\"modal fiveup pvtk-modal\">\n      <h2 id=\"pvtk-step-title\" className=\"tkn-ns-title\">Private Key</h2>\n      <p className=\"modal-explain\">\n        Unfortunately we have to ask for your private key as most of the complexity pertaining the contract deployment is handled serverside.\n      </p>\n      <form noValidate autoComplete=\"off\">\n        <FormControl fullWidth className=\"pvtk-input\" variant=\"outlined\">\n          <OutlinedInput\n            id=\"pvtk-input\"\n            value={PrivateKey}\n            startAdornment={<InputAdornment position=\"start\"><FiKey /></InputAdornment>}\n            labelWidth={50}\n            onChange={pvtkOnChange}\n          />\n        </FormControl>\n      </form>\n      <button\n        className=\"modal-btn confirm-button secondary-btn-tkn\"\n        onClick={confirmPvtk}\n      >\n        Confirm\n      </button>\n    </div>\n  )\n\n  return (\n    <Modal\n      open={pvtkModalOpen}\n      onClose={() => {\n        setOpenClose(false)\n      }}\n      aria-labelledby=\"pvtk-step-title\"\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={ {\n        timeout: 800,\n        style: { backdropFilter: 'blur(2rem)' }\n      } }\n    >\n      <Fade in={pvtkModalOpen}>\n        {askForPvtkModal}\n      </Fade>\n    </Modal>\n  )\n}","import { GrStatusGoodSmall } from 'react-icons/gr'\n\nexport const MainDivHeading = ({\n  BEPComp, ERCComp,\n  connectWeb3, Web3Status\n}: {\n  BEPComp: boolean\n  ERCComp: boolean\n  Web3Status: string\n  connectWeb3: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => Promise<void>\n}) => (\n  <h3 className=\"heading\">\n    <div className=\"status\">\n      <div>\n        { \n          ERCComp && <>\n            <h1>Deploy ERC20</h1>\n            <p>Fill in the form to deploy your ERC20 token!</p>\n          </>\n        }\n        { \n          BEPComp && <>\n            <h1>Deploy BEP20</h1>\n            <p>Fill in the form to deploy your BEP20 token!</p>\n          </>\n        }\n      </div>\n      <button\n        id=\"main-connect-web3-btn\"\n        className=\"connect-web3-btn secondary-btn-tkn\"\n        onClick={connectWeb3}\n      >\n        <p>Connect Web3</p>\n        <GrStatusGoodSmall className=\"web3-status-icon\" style={ {\n          color: Web3Status\n        } }/>\n      </button>\n    </div>\n  </h3>\n)\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { SwitchButton } from './utils/Switch'\n\nexport interface IMintableBurnableSwitches {\n  mintableChecked: boolean\n  handleSwitchChange: (\n    event: React.ChangeEvent<HTMLInputElement>,\n    which: 'mintableChecked' | 'burnableChecked'\n  ) => void\n  burnableChecked: boolean  \n}\n\nexport const MintableBurnableSwitches = ({\n  mintableChecked,\n  burnableChecked,\n  handleSwitchChange\n}: IMintableBurnableSwitches) => (\n  <div className=\"mintable-burnable-switches push-down\">\n    <Typography component=\"div\">\n      <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n        <Grid item className=\"switch-label\">Mintable</Grid>\n        <Grid item>\n          <SwitchButton\n            checked={mintableChecked}\n            onChange={(event) => {\n              handleSwitchChange(event, 'mintableChecked')\n            }}\n            name=\"mintable-check\"\n          />\n        </Grid>\n      </Grid>\n    </Typography>\n    <Typography component=\"div\">\n      <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n        <Grid item>\n          <SwitchButton\n            checked={burnableChecked}\n            onChange={(event) => {\n              handleSwitchChange(event, 'burnableChecked')\n            }}\n            name=\"burnable-check\"\n          />\n        </Grid>\n        <Grid item className=\"switch-label\">Burnable</Grid>\n      </Grid>\n    </Typography>\n  </div>\n)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Slider from '@material-ui/core/Slider'\n\nconst iOSBoxShadow =\n  '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)'\n\nconst IOSSlider = withStyles({\n  root: {\n    color: '#3880ff',\n    height: 2,\n    padding: '15px 0'\n  },\n  thumb: {\n    height: 28,\n    width: 28,\n    backgroundColor: '#fff',\n    boxShadow: iOSBoxShadow,\n    marginTop: -14,\n    marginLeft: -14,\n    '&:focus, &:hover, &$active': {\n      boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: iOSBoxShadow\n      }\n    }\n  },\n  active: {},\n  valueLabel: {\n    /*background: 'linear-gradient(to right bottom, rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0.3) )',\n    display: 'flex',\n    width: '3rem',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '2rem',*/\n    left: 'calc(-50% + 12px)',\n    top: -22,\n    '& *': {\n      color: '#000',\n      background: 'transparent'\n    }\n  },\n  track: {\n    height: 2\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: '#bfbfbf'\n  },\n  mark: {\n    backgroundColor: '#bfbfbf',\n    height: 8,\n    width: 1,\n    marginTop: -3\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor'\n  }\n})(Slider)\n\nexport const SliderComp = ({\n  label, marks, defaultValue,\n  max, restricted, onChange\n}: {\n  label: string\n  defaultValue: number\n  max: number,\n  restricted: boolean\n  marks: { value: number, label?: string }[]\n  onChange: (\n    event: React.ChangeEvent<{}>,\n    newValue: number | number[]\n  ) => void\n}) => (\n  <>\n    <p className=\"switch-label\">{label}</p>\n    <IOSSlider\n      aria-label=\"slider\"\n      defaultValue={defaultValue}\n      marks={marks}\n      valueLabelDisplay=\"on\"\n      step={(restricted) ? null : defaultValue / 10 }\n      max={max}\n      onChange={onChange}\n    />\n  </>\n)\n","import { SliderComp } from './utils/Slider'\n\nexport const DecimalsTotalSupplySliders = ({\n  handleSliderChange\n}: {\n  handleSliderChange: (\n    event: React.ChangeEvent<{}>,\n    which: 'Decimals' | 'TotalSupply',\n    newValue: number | number[]\n  ) => void \n}) => (\n  <div className=\"slider-comps\">\n    <div className=\"deploy-token-comp\">\n      <SliderComp\n        label=\"Decimals\"\n        defaultValue={18}\n        max={18}\n        restricted={true}\n        marks={[\n          { value: 6 },\n          { value: 8 },\n          { value: 12 },\n          { value: 18 }\n        ]}\n        onChange={(event, newValue) => {\n          handleSliderChange(event, 'Decimals', newValue)\n        }}\n      />\n    </div>\n    <div className=\"deploy-token-comp class2\">\n      <SliderComp\n        label=\"Total Supply\"\n        defaultValue={100000}\n        max={100000}\n        restricted={true}\n        marks={[\n          { value: 10000 },\n          { value: 50000 },\n          { value: 100000 },\n        ]}\n        onChange={(event, newValue) => {\n          handleSliderChange(event, 'TotalSupply', newValue)\n        }}\n      />\n    </div>\n  </div>\n)\n","import { MainDivHeading } from './components/MainDivHeading'\nimport { IMintableBurnableSwitches } from './components/MintableBurnableSwitches'\nimport { MintableBurnableSwitches } from './components/MintableBurnableSwitches'\nimport { DecimalsTotalSupplySliders } from './components/DecimalsTotalSupplySliders'\n\ntype IMainDiv = IMintableBurnableSwitches & {\n  handleSliderChange: (\n    event: React.ChangeEvent<{}>,\n    which: 'Decimals' | 'TotalSupply',\n    newValue: number | number[]\n  ) => void\n  ERCComp: boolean\n  BEPComp: boolean\n  openTknNameSymModal: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void\n  Web3Status: string\n  connectWeb3: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => Promise<void>\n}\n\nexport const MainDiv = ({\n  mintableChecked,\n  burnableChecked,\n  handleSwitchChange,\n  handleSliderChange,\n  ERCComp,\n  BEPComp,\n  openTknNameSymModal,\n  Web3Status,\n  connectWeb3\n}: IMainDiv) => (\n  <div className=\"main-content\">\n    <MainDivHeading\n      ERCComp={ERCComp}\n      BEPComp={BEPComp}\n      Web3Status={Web3Status}\n      connectWeb3={connectWeb3}\n    />\n    <div className=\"deploy-token-card\">\n      <MintableBurnableSwitches\n        mintableChecked={mintableChecked}\n        burnableChecked={burnableChecked}\n        handleSwitchChange={handleSwitchChange}\n      />\n      <DecimalsTotalSupplySliders\n        handleSliderChange={handleSliderChange}\n      />\n      <div className=\"deploy-token-btn-div\">\n        <button\n          className=\"deploy-token-btn secondary-btn-tkn\"\n          onClick={openTknNameSymModal}\n        >NEXT</button>\n      </div>\n    </div>\n  </div>\n)","import { makeStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    }\n  }\n}))\n\nexport const Loader = () => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress />\n    </div>\n  )\n}","import Modal from '@material-ui/core/Modal'\nimport { Backdrop, Fade } from '@material-ui/core'\n//import { createStyles, makeStyles } from '@material-ui/styles'\nimport { Loader } from './utils/Loader'\n\nexport interface ILoadingModal {\n  loadingModalOpen: boolean\n}\n\nexport const LoadingModal = ({\n  loadingModalOpen\n}: ILoadingModal) => <Modal\n  open={loadingModalOpen}\n  closeAfterTransition\n  BackdropComponent={Backdrop}\n  BackdropProps={ {\n    timeout: 500,\n    style: { backdropFilter: 'blur(2rem)'}\n  } }\n>\n  <Fade in={loadingModalOpen}>\n    <Loader />\n  </Fade>\n</Modal>","import Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst Alert = (props: AlertProps) => (\n  <MuiAlert elevation={6} variant=\"filled\" {...props} />\n)\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%'\n  }\n}))\n\ninterface INotificationSnackBars {\n  successSnackOpen: boolean\n  errorSnackOpen: boolean\n  infoSnackOpen: boolean\n  enterPvtkSnackOpen: boolean\n  enteredPrivateKeySnackOpen: boolean\n  forgotTknNameSymSnackOpen: boolean\n  tokenType: 'ERC20' | 'BEP20'\n  handleClose: (\n    which:\n      | 'successSnackOpen'\n      | 'errorSnackOpen'\n      | 'infoSnackOpen'\n      | 'enterPvtkSnackOpen'\n      | 'enteredPrivateKeySnackOpen'\n      | 'forgotTknNameSymSnackOpen'\n  ) => () => void\n}\n\nexport const NotificationSnackBars = ({\n  successSnackOpen, errorSnackOpen, enterPvtkSnackOpen, forgotTknNameSymSnackOpen,\n  tokenType, handleClose, infoSnackOpen, enteredPrivateKeySnackOpen\n}: INotificationSnackBars) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Snackbar anchorOrigin={\n        { vertical: 'top', horizontal: 'center' }\n      } open={successSnackOpen} autoHideDuration={6000} onClose={handleClose('successSnackOpen')}>\n        <Alert onClose={handleClose('successSnackOpen')} severity=\"success\">\n          Successfully deployed your {tokenType} token! 🎉💃💃\n        </Alert>\n      </Snackbar>\n      <Snackbar anchorOrigin={\n        { vertical: 'top', horizontal: 'center' }\n      } open={errorSnackOpen} autoHideDuration={6000} onClose={handleClose('errorSnackOpen')}>\n        <Alert onClose={handleClose('errorSnackOpen')} severity=\"error\">\n          There has been an error deploying your token...\n        </Alert>\n      </Snackbar>\n      <Snackbar anchorOrigin={\n        { vertical: 'top', horizontal: 'center' }\n      } open={infoSnackOpen} autoHideDuration={6000} onClose={handleClose('infoSnackOpen')}>\n        <Alert onClose={handleClose('infoSnackOpen')} severity=\"info\">\n          You will be redirected shortly...\n        </Alert>\n      </Snackbar>\n      <Snackbar anchorOrigin={\n        { vertical: 'top', horizontal: 'center' }\n      } open={enterPvtkSnackOpen} autoHideDuration={9000} onClose={handleClose('enterPvtkSnackOpen')}>\n        <Alert onClose={handleClose('enterPvtkSnackOpen')} severity=\"info\">\n          Please enter your private key. (We recommend not using this service for mainnet deployments for this exact reason. If you wish to deploy a {tokenType} token, please kindly contact the developer)\n        </Alert>\n      </Snackbar>\n      <Snackbar anchorOrigin={\n        { vertical: 'top', horizontal: 'center' }\n      } open={enteredPrivateKeySnackOpen} autoHideDuration={9000} onClose={handleClose('enteredPrivateKeySnackOpen')}>\n        <Alert onClose={handleClose('enteredPrivateKeySnackOpen')} severity=\"warning\">\n          You have successfully entered your private key. We hope this is a test net key and not a real private key. For your safety we recommend not using this service for mainnet deployments.\n        </Alert>\n      </Snackbar>\n      <Snackbar anchorOrigin={\n        { vertical: 'top', horizontal: 'center' }\n      } open={forgotTknNameSymSnackOpen} autoHideDuration={9000} onClose={handleClose('forgotTknNameSymSnackOpen')}>\n        <Alert onClose={handleClose('forgotTknNameSymSnackOpen')} severity=\"error\">\n          Uh oh. You forgot to enter the name and symbol for your {tokenType} token.\n        </Alert>\n      </Snackbar>\n    </div>\n  )\n}","import { AiFillGithub } from 'react-icons/ai'\n\nexport const NotAvailableOnMobile = () => (\n  <div className=\"not-on-mobile-container\">\n    <div className=\"glass\">\n      <h1>Unfortunately tkngen is not available on mobile.</h1>\n      <a style={{ textDecoration: 'none' }} href=\"https://github.com/sntsabode/tkngen\" className=\"github-credits sceondary-btn-tkn\">\n        <h3>Check it out on Github</h3>\n        <AiFillGithub className=\"github-logo\" style={ {\n          width: '4rem',\n          height: '4rem'\n        } }/>\n      </a>\n    </div>\n  </div>\n)\n","import React from 'react'\nimport { Sidebar } from './Sidebar'\nimport { Circles } from './components/utils/Circles'\nimport { TokenNameSymbolModal } from './components/TokenNameSymbolModal'\nimport { NetworkModal } from './components/NetworkModal'\nimport { AskForPvtkModal } from './components/AskForPvtkModal'\nimport { MainDiv } from './Main'\nimport axios from 'axios'\nimport Web3 from 'web3'\nimport { LoadingModal } from './components/LoadingModal'\nimport { NotificationSnackBars } from './components/NotificationSnackBars'\nimport { IAppState, IRequestBody, SupportedNetwork } from './IApp'\nimport { GrStatusGoodSmall } from 'react-icons/gr'\nimport { BiMenuAltLeft } from 'react-icons/bi'\nimport { ToastContainer, toast } from 'react-toastify'\nimport { NotAvailableOnMobile } from './components/NotAvailableOnMobile'\n\nconst TopNav = ({\n  connectWeb3, Web3Status, openCloseSidebar\n}: {\n  openCloseSidebar: (\n    event: React.MouseEvent<SVGElement, MouseEvent>\n  ) => void\n  Web3Status: string\n  connectWeb3: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => Promise<void>\n}) => (\n  <div className=\"top-nav\">\n    <BiMenuAltLeft onClick={openCloseSidebar} className=\"menu-icon\"/>\n\n    <button\n      id=\"secondary-connect-web3-btn\"\n      className=\"connect-web3-btn secondary-btn-tkn\"\n      onClick={connectWeb3}\n    >\n      <p>Connect Web3</p>\n      <GrStatusGoodSmall className=\"web3-status-icon\" style={ {\n        color: Web3Status\n      } }/>\n    </button>\n  </div>\n)\n\nasync function sendRequest(url: string, body: IRequestBody) {\n  return axios.post(url, body)\n}\n\nconst URLs = {\n  ERC20: 'https://tkngen-api.herokuapp.com/ERC-20/',\n  BEP20: 'https://tkngen-api.herokuapp.com/BEP-20/'\n}\n\nconst BlockExplorerURLs = {\n  bsc: {\n    mainnet: '',\n    testnet: 'https://testnet.bscscan.com/tx/'\n  },\n\n  eth: {\n    mainnet: '',\n    kovan: ''\n  }\n}\n\nexport class App extends React.Component<{}, IAppState> {\n  Web3?: Web3\n  state = {\n    URL: URLs.ERC20,\n    ERCComp: true,\n    BEPComp: false,\n    mintableChecked: false,\n    burnableChecked: true,\n    TokenName: '',\n    TokenSymbol: '',\n    Decimals: 18,\n    TotalSupply: 100000,\n    tokenNameSymModalOpen: false,\n    networkModalOpen: false,\n    loadingModalOpen: false,\n    pvtkModalOpen: false,\n    PrivateKey: '',\n    Network: '' as SupportedNetwork,\n    netOneChecked: false,\n    netTwoChecked: false,\n    netThreeChecked: false,\n    Web3Status: '#ff4444', // red\n    tokenType: 'ERC20' as 'ERC20' | 'BEP20',\n    successSnackOpen: false,\n    errorSnackOpen: false,\n    infoSnackOpen: false,\n    enterPvtkSnackOpen: false,\n    enteredPrivateKeySnackOpen: false,\n    forgotTknNameSymSnackOpen: false,\n    sidebarOpen: false,\n    pvtk: ''\n  }\n\n  deployToken = async () => {\n    if (!this.deployToken_.checkParams()) {\n      if (!this.state.tokenNameSymModalOpen) setTimeout(() => this.setState({\n        ...this.state, tokenNameSymModalOpen: true\n      }), 2000)\n\n      return\n    }\n    \n    if (!this.state.Network) {\n      toast.error('Please select a network', {\n        position: 'top-left'\n      })\n\n      return\n    }\n\n    let dontAutoOpenPvtkModal = false\n\n    this.handlers.handlepvtkModalOpenClose = (which: boolean) => {\n      dontAutoOpenPvtkModal = true\n      this.setState({\n        ...this.state, pvtkModalOpen: which\n      })\n    }\n    try {\n      if (!this.state.pvtk) {\n        this.setState({\n          ...this.state, networkModalOpen: false,\n          enterPvtkSnackOpen: true\n        })\n\n        setTimeout(() => this.state.pvtkModalOpen\n          ? {} : dontAutoOpenPvtkModal ? {} : this.setState({\n            ...this.state, pvtkModalOpen: true\n          }), 10000)\n        \n        return\n      }\n\n      const url = this.deployToken_.determineUrlPath()\n\n      this.setState({\n        ...this.state,\n        networkModalOpen: false,\n        loadingModalOpen: true\n      })\n\n      const res = await this.deployToken_.sendRequest(url)\n      const redirectUrl = this.deployToken_.determineRedirectUrl(res.data.data.receipt.transactionHash)\n\n      console.log(res)\n\n      this.handlers.handlepvtkModalOpenClose = (which: boolean) => {\n        this.setState({\n          ...this.state, pvtkModalOpen: which\n        })\n      }\n\n      this.deployToken_.redirectUser(redirectUrl)\n    } catch (e) {\n      this.setState({\n        ...this.state, loadingModalOpen: false, errorSnackOpen: true\n      })\n\n      if (!e.response) return\n\n      if (e.response.data.err) setTimeout(() => {\n        e.response.data.err.errors.forEach((err: any) => {\n          toast.error(err.msg, {\n            position: 'top-left'\n          })\n        })\n\n        this.setState({\n          ...this.state, errorSnackOpen: false\n        })\n      }, 1000)\n\n      else if (e.response.data.e) setTimeout(() => {\n        this.setState({\n          ...this.state, errorSnackOpen: false\n        })\n\n        toast.error(e.response.data.e, {\n          position: 'top-left'\n        })\n      }, 1000)\n    }\n  }\n\n  readonly deployToken_ = {\n    redirectUser: (redirectUrl: string) => {\n      this.setState({\n        ...this.state, loadingModalOpen: false\n      })\n  \n      setTimeout(() => this.setState({\n        ...this.state, successSnackOpen: true\n      }), 500)\n      setTimeout(() => this.setState({\n        ...this.state, infoSnackOpen: true, successSnackOpen: false\n      }), 2000)\n      setTimeout(() => window.location.href = redirectUrl, 5000)\n    },\n\n    determineUrlPath: () => {\n      if (this.state.mintableChecked && !this.state.burnableChecked)\n        return this.state.URL + 'Mintable'\n      else if (this.state.burnableChecked && !this.state.mintableChecked)\n        return this.state.URL + 'Burnable'\n      else if (this.state.mintableChecked && this.state.burnableChecked)\n        return this.state.URL + 'MintableBurnable'\n      else return this.state.URL + 'Standard'\n    },\n\n    determineRedirectUrl: (txhash: string) => (this.state.Network as string) === 'BSC Test Net'\n    ? BlockExplorerURLs.bsc.testnet + txhash\n    : (this.state.Network as string) === 'BSC'\n    ? BlockExplorerURLs.bsc.mainnet + txhash\n    : this.state.Network === 'KOVAN'\n    ? BlockExplorerURLs.eth.kovan + txhash\n    : this.state.Network === 'MAINNET'\n    ? BlockExplorerURLs.eth.mainnet + txhash\n    : '/',\n\n    sendRequest: (url: string) => sendRequest(url, {\n      tokenName: this.state.TokenName,\n      tokenDecimals: this.state.Decimals,\n      tokenSymbol: this.state.TokenSymbol,\n      totalSupply: this.state.TotalSupply,\n      privateKey: this.state.pvtk,\n      network: ((): SupportedNetwork => {\n        if ((this.state.Network as string) === 'BSC Test Net')\n          return 'BINANCESMARTCHAIN_TEST'\n        else if ((this.state.Network as string) === 'BSC')\n          return 'BINANCESMARTCHAIN'\n        else if ((this.state.Network as string) === 'ETH FORK')\n          return 'MAINNET_FORK'\n        else if ((this.state.Network as string) === 'BSC FORK')\n          return 'BINANCESMARTCHAIN_FORK'\n        else return this.state.Network\n      })()\n    }),\n\n    checkParams: (): boolean => {\n      if (!this.state.TokenName || !this.state.TokenSymbol) {\n        this.setState({\n          ...this.state, networkModalOpen: false, forgotTknNameSymSnackOpen: true\n        })\n\n        return false\n      }\n\n      return true\n    }\n  }\n\n  readonly connectWeb3 = async (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    event.preventDefault()\n    \n    if (!(window as any).ethereum) return alert('Uh oh')\n\n    await (window as any).ethereum.send('eth_requestAccounts')\n    this.Web3 = new Web3((window as any).ethereum)\n    this.setState({\n      ...this.state, Web3Status: '#00C851' // green\n    })\n    this.handlers.handlepvtkModalOpenClose(true)\n  }\n\n  readonly render = () => {\n    return (\n      <>\n        <main className=\"main-container\">\n          <section className=\"glass\">\n            <Sidebar\n              activeChange={this.handlers.activeChange}\n              ERCComp={this.state.ERCComp}\n              BEPComp={this.state.BEPComp}\n            />\n            <div className=\"container\">\n              <TopNav\n                connectWeb3={this.connectWeb3}\n                Web3Status={this.state.Web3Status}\n                openCloseSidebar={(event) => {\n                  if (!this.state.sidebarOpen) {\n                    document.getElementById('sidebar_')!.style.display = 'flex !important'\n                    this.setState({\n                      ...this.state, sidebarOpen: true\n                    })\n                    console.log('sidebar open')\n                  }\n\n                  document.getElementById('sidebar_')!.style.display = 'none !important'\n                  this.setState({\n                    ...this.state, sidebarOpen: false\n                  })\n                }}\n              />\n              <MainDiv\n                mintableChecked={this.state.mintableChecked}\n                burnableChecked={this.state.burnableChecked}\n                handleSwitchChange={this.handlers.handleSwitchChange}\n                handleSliderChange={this.handlers.handleSliderChange}\n                ERCComp={this.state.ERCComp}\n                BEPComp={this.state.BEPComp}\n                openTknNameSymModal={(event) => {\n                  event.preventDefault()\n                  console.log(this.deployToken_.determineUrlPath())\n                  this.handlers.handletokenNameSymModalOpenClose(true)\n                }}\n                Web3Status={this.state.Web3Status}\n                connectWeb3={this.connectWeb3}\n              />\n              <TokenNameSymbolModal\n                modalOpen={this.state.tokenNameSymModalOpen}\n                setOpenClose={this.handlers.handletokenNameSymModalOpenClose}\n                handleOnchange={this.handlers.handleTknNameSymOnChange}\n                TokenName={this.state.TokenName}\n                TokenSymbol={this.state.TokenSymbol}\n                onClick={(event) => {\n                  event.preventDefault()\n                  this.handlers.handletokenNameSymModalOpenClose(false)\n                  setTimeout(\n                    () => this.handlers.handlenetworkModalOpenClose(true),\n                    200\n                  )\n                }}\n              />\n              <NetworkModal\n                networkModalOpen={this.state.networkModalOpen}\n                setOpenClose={this.handlers.handlenetworkModalOpenClose}\n                networks={ {\n                  netOne: {\n                    net: this.state.ERCComp ? 'MAINNET' : 'BSC',\n                    checked: this.state.netOneChecked\n                  },\n\n                  netTwo: {\n                    net: this.state.ERCComp ? 'KOVAN' : 'BSC Test Net',\n                    checked: this.state.netTwoChecked\n                  },\n\n                  netThree: {\n                    net: this.state.ERCComp ? 'ETH FORK' : 'BSC FORK',\n                    checked: this.state.netThreeChecked\n                  }\n                } }\n                onChange={this.handlers.handleNetworkChange}\n                deployToken={async (event) => {\n                  event.preventDefault()\n                  return this.deployToken()\n                } }\n              />\n              <AskForPvtkModal\n                pvtkModalOpen={this.state.pvtkModalOpen}\n                setOpenClose={this.handlers.handlepvtkModalOpenClose}\n                pvtkOnChange={(event) => this.setState({\n                  ...this.state, PrivateKey: event.target.value\n                })}\n                PrivateKey={this.state.PrivateKey}\n                confirmPvtk={this.handlers.confirmPvtk}\n              />\n              <LoadingModal\n                loadingModalOpen={this.state.loadingModalOpen}\n              />\n              <NotificationSnackBars\n                successSnackOpen={this.state.successSnackOpen}\n                forgotTknNameSymSnackOpen={this.state.forgotTknNameSymSnackOpen}\n                errorSnackOpen={this.state.errorSnackOpen}\n                tokenType={this.state.tokenType}\n                infoSnackOpen={this.state.infoSnackOpen}\n                handleClose={(which: 'successSnackOpen' | 'errorSnackOpen' | 'infoSnackOpen' | 'enterPvtkSnackOpen' | 'enteredPrivateKeySnackOpen' | 'forgotTknNameSymSnackOpen') => \n                () => this.setState({\n                  ...this.state, [which]: false\n                })}\n                enterPvtkSnackOpen={this.state.enterPvtkSnackOpen}\n                enteredPrivateKeySnackOpen={this.state.enteredPrivateKeySnackOpen}\n              />\n            </div>\n          </section>\n          <ToastContainer />\n          <Circles />\n        </main>\n        <NotAvailableOnMobile />\n      </>\n    )\n  }\n\n  private handlers = ({\n    activeChange: (\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n      which: 'ERCComp' | 'BEPComp'\n    ) => {\n      event.preventDefault()\n      if (which === 'ERCComp') {\n        const bool = !this.state.ERCComp ? true : false\n        this.setState({\n          ...this.state,\n          ERCComp: bool,\n          BEPComp: !bool,\n          URL: URLs.ERC20,\n          Network: 'KOVAN',\n          tokenType: 'ERC20'\n        })\n      } else {\n        const bool = !this.state.BEPComp ? true : false\n        this.setState({\n          ...this.state,\n          BEPComp: bool,\n          ERCComp: !bool,\n          URL: URLs.BEP20,\n          Network: 'BINANCESMARTCHAIN_TEST',\n          tokenType: 'BEP20'\n        })\n      }\n    },\n\n    handleSwitchChange: (\n      event: React.ChangeEvent<HTMLInputElement>,\n      which: 'mintableChecked' | 'burnableChecked'\n    ) => {\n      event.preventDefault()\n      this.setState({\n        ...this.state, [which]: this.state[which] ? false : true\n      })\n    },\n\n    handleSliderChange: (\n      event: React.ChangeEvent<{}>,\n      which: 'Decimals' | 'TotalSupply',\n      newValue: number | number[]\n    ) => {\n      event.preventDefault()\n      this.setState({\n        ...this.state, [which]: newValue\n      })\n    },\n\n    handletokenNameSymModalOpenClose: (\n      which: boolean\n    ) => {\n      this.setState({\n        ...this.state, tokenNameSymModalOpen: which\n      })\n    },\n\n    handleTknNameSymOnChange: (which: 'TokenName' | 'TokenSymbol') => (\n      event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n      this.setState({\n        ...this.state, [which]: event.target.value\n      })\n    },\n\n    handlenetworkModalOpenClose: (which: boolean) => {\n      this.setState({\n        ...this.state, networkModalOpen: which\n      })\n    },\n\n    handleNetworkChange: (\n      event: React.ChangeEvent, newNet: string,\n      net: 'netOneChecked' | 'netTwoChecked' | 'netThreeChecked'\n    ) => ({\n      netOneChecked: () => (this.state.netOneChecked) ? this.setState({\n        ...this.state, Network: newNet as SupportedNetwork,\n        netOneChecked: false,\n        netTwoChecked: false,\n        netThreeChecked: false\n      }) : this.setState({\n        ...this.state, Network: newNet as SupportedNetwork,\n        netOneChecked: true,\n        netTwoChecked: false,\n        netThreeChecked: false\n      }),\n\n      netTwoChecked: () => (this.state.netTwoChecked) ? this.setState({\n        ...this.state, Network: newNet as SupportedNetwork,\n        netOneChecked: false,\n        netTwoChecked: false,\n        netThreeChecked: false\n      }) : this.setState({\n        ...this.state, Network: newNet as SupportedNetwork,\n        netOneChecked: false,\n        netTwoChecked: true,\n        netThreeChecked: false\n      }),\n\n      netThreeChecked: () => (this.state.netThreeChecked) ? this.setState({\n        ...this.state, Network: newNet as SupportedNetwork,\n        netOneChecked: false,\n        netTwoChecked: false,\n        netThreeChecked: false\n      }) : this.setState({\n        ...this.state, Network: newNet as SupportedNetwork,\n        netOneChecked: false,\n        netTwoChecked: false,\n        netThreeChecked: true\n      })\n    })[net](),\n\n    handlepvtkModalOpenClose: (which: boolean) => {\n      this.setState({\n        ...this.state, pvtkModalOpen: which\n      })\n    },\n\n    confirmPvtk: (event: any) => {\n      event.preventDefault()\n      const pvt = '•••••••••••••••'\n\n      if (this.state.PrivateKey !== '•••••••••••••••') {\n        this.setState({\n          ...this.state, pvtk: this.state.PrivateKey, PrivateKey: pvt\n        })\n      }\n\n      setTimeout(() => {\n        this.setState({\n          ...this.state, pvtkModalOpen: false, enteredPrivateKeySnackOpen: true\n        })\n      }, 800)\n    }\n  })\n}","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'react-toastify/dist/ReactToastify.css'\nimport './css/index.css'\nimport { App } from './components/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}